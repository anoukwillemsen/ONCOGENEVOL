hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,200),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
ymin<-min(a$V3, a$V5)
ymax<-max(a$V3, a$V5)
xmin<-min(a$V2, a$V4)
xmax<-max(a$V2, a$V4)
plot   (a$V2, a$V3, pch=".", col="blue", ylim=c(ymin, ymax), xlim=c(xmin, xmax));
points (a$V4, a$V5, pch=".", col="red");
dev.off();
setwd("/DATA/work/E5/E5_Original_files/PermutationTests/AlphaPVs_interE2L2/test_randomly_shuffled_data/extra");
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_3599509379.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,200),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
svg(file="ml_blen_MUC_CUT_GW.svg", width=9., height=4.5);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUC_CUT_GW.txt");
dev.off()
setwd("/DATA/work/E5/E5_Original_files/PermutationTests/AlphaPVs_interE2L2/test_randomly_shuffled_data/extra");
svg(file="ml_blen_MUC_CUT_GW.svg", width=9., height=4.5);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUC_CUT_GW.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,200),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,100),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
pdf(file="ml_blen_MUC_CUT_GW.pdf");
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUC_CUT_GW.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,100),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
pdf(file="ml_blen_MUC_CUT_GW.pdf");
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,50),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
png ("MUC_CUT_GW.png", width = 6., height = 4, units = "in", res = 150);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUC_CUT_GW.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,50),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUCGW_CUT.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,200),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
ymin<-min(a$V3, a$V5)
ymax<-max(a$V3, a$V5)
xmin<-min(a$V2, a$V4)
xmax<-max(a$V2, a$V4)
plot   (a$V2, a$V3, pch=".", col="blue", ylim=c(ymin, ymax), xlim=c(xmin, xmax));
points (a$V4, a$V5, pch=".", col="red");
dev.off();
png ("MUCGW_CUT.png", width = 6., height = 4, units = "in", res = 150);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUCGW_CUT.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,50),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
setwd("/DATA/work/E5/E5_Original_files/PermutationTests/AlphaPVs_interE2L2/test_randomly_shuffled_data/extra");
png ("MUC_CUT_GW.png", width = 6., height = 4, units = "in", res = 150);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUC_CUT_GW.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,50),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
png ("MUCGW_CUT.png", width = 6., height = 4, units = "in", res = 150);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUCGW_CUT.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,50),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
png ("MUCCUT_GW.png", width = 6., height = 4, units = "in", res = 150);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUCCUT_GW.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,200),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
png ("MUCCUT_GW.png", width = 6., height = 4, units = "in", res = 150);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
a <- read.table ("res_table_MUCCUT_GW.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,50),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
ymin<-min(a$V3, a$V5)
ymax<-max(a$V3, a$V5)
xmin<-min(a$V2, a$V4)
xmax<-max(a$V2, a$V4)
plot   (a$V2, a$V3, pch=".", col="blue", ylim=c(ymin, ymax), xlim=c(xmin, xmax));
points (a$V4, a$V5, pch=".", col="red");
plot(a$V2, a$V3, pch=".", col="blue", ylim=c(ymin, ymax), xlim=c(xmin, xmax), xlab = "ML tree length", ylab = "LnL");
points(a$V4, a$V5, pch=".", col="red");
a <- read.table ("res_table_MUC_CUTGW.txt");
x1 <- hist (a$V2 - 1., 40); # not aligned
x2 <- hist (a$V4 - 1., 2); # aligned
hist(a$V2 -1., 40)
hist(a$V4 -1., 40)
hist(a$V3 -1., 40)
hist(a$V5 -1., 40)
ymax <- max (x1$counts, x2$counts);
plot  (x1$mids, x1$counts, type="h", col = "blue", ylim=c(0,ymax), xlim=c(0,200),xlab="ML tree length", ylab="frequency");
lines (x2$mids, x2$counts, type="h", col = "red");
legend ("top", cex = 0.8, legend = c("before realignment", "after realignment"), bty = "n", text.col = c("blue", "red"));
dev.off();
png ("MLtreelength_LnL_MUC_CUTGW.png", width = 6., height = 4, units = "in", res = 150);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
par (tcl=-0.15, mgp=c(0.8,0.06,0), cex.main=1., mar=c(1.9,1.7,0.2,0.2));
ymin<-min(a$V3, a$V5)
ymax<-max(a$V3, a$V5)
xmin<-min(a$V2, a$V4)
xmax<-max(a$V2, a$V4)
plot(a$V2, a$V3, pch=".", col="blue", ylim=c(ymin, ymax), xlim=c(xmin, xmax), xlab = "ML tree length", ylab = "LnL");
points(a$V4, a$V5, pch=".", col="red");
dev.off();
setwd("/DATA/work/E5/E5_Original_files/PermutationTests/AlphaPVs_interE2L2/test_randomly_shuffled_data");
setwd("/DATA/work/E5/E5_Original_files/PermutationTests/AlphaPVs_interE2L2/test_randomly_shuffled_data");
col_red   <- rgb(0.8, 0.4, 0.3, 0.5);
a <- read.table ("tableLnL.txt");
a <- read.table ("table_LnL.txt");
par(fig=c(0.52, 1, 0, 1), new = T, cex=1); ## AIC versus tree length
par (tcl=-0.15, mgp=c(1,0.08,0), cex.main=1., mar=c(2,1.8,0.6,0.2));
ballsize <- 4*(a$V4 - min(a$V4))/(max(a$V4) - min(a$V4)) + 0.1
plot   (a$V3, a$V5, pch=21, col="firebrick4", bg=col_red, cex=ballsize, xlab="common origin (BE) tree length", ylab="");
mtext(expression(Delta[AIC]), side=2, line=0.8, cex=1.4);
mtext("b)", side=3, line=-1, cex=2, adj=-0.14);
par(fig=c(0.52, 1, 0, 1), new = T, cex=1); ## AIC versus tree length
par(tcl=-0.15, mgp=c(1,0.08,0), cex.main=1., mar=c(2,1.8,0.6,0.2));
ballsize <- 4*(a$V5 - min(a$V5))/(max(a$V5) - min(a$V5)) + 0.1
plot(a$V4, a$V6, pch=21, col="firebrick4", bg=col_red, cex=ballsize, xlab="common origin (BE) tree length", ylab="");
mtext(expression(Delta[AIC]), side=2, line=0.8, cex=1.4);
mtext("b)", side=3, line=-1, cex=2, adj=-0.14);
dev.off();
par(fig=c(0.52, 1, 0, 1), new = T, cex=1); ## AIC versus tree length
par(tcl=-0.15, mgp=c(1,0.08,0), cex.main=1., mar=c(2,1.8,0.6,0.2));
ballsize <- 4*(a$V5 - min(a$V5))/(max(a$V5) - min(a$V5)) + 0.1
plot(a$V4, a$V6, pch=21, col="firebrick4", bg=col_red, cex=ballsize, xlab="common origin (BE) tree length", ylab="");
mtext(expression(Delta[AIC]), side=2, line=0.8, cex=1.4);
mtext("b)", side=3, line=-1, cex=2, adj=-0.14);
setwd("/DATA/work/E5/E5_Original_files/PermutationTests/AlphaPVs_interE2L2/test_randomly_shuffled_data");
col_red   <- rgb(0.8, 0.4, 0.3, 0.5);
setwd("/DATA/work/E5/E5_Original_files/PermutationTests/AlphaPVs_interE2L2/test_randomly_shuffled_data");
col_red <- rgb(0.8, 0.4, 0.3, 0.5);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
a <- read.table ("table_LnL.txt");
par(fig=c(0, 0.7, 0, 1), new = T, cex=1); ## AIC versus tree length
par(tcl=-0.15, mgp=c(1,0.08,0), cex.main=1., mar=c(2,2,0.6,0.2));
ballsize <- 4*(a$V5 - min(a$V5))/(max(a$V5) - min(a$V5)) + 0.1
plot(a$V4, a$V6, pch=21, col="firebrick4", bg=col_red, cex=ballsize, xlab="common origin tree length", ylab="");
mtext(expression(Delta[AIC]), side=2, line=0.8, cex=1.4);
par(fig=c(0.7, 1, 0, 1), mar=c(2,0,0,0.1), new = T); ## inset
barplot (hist (a$V5, 12, plot = F)$counts, axes=F, space=0, horiz=T, border="gray30", col="gray70");
pdf("AIC-one_MUC_CUT_GW_21iterations.pdf", width = 7.5, height = 3.5);
par (font=2, cex=1, col.main="gray10", cex.axis=0.8, cex.lab=0.9);
a <- read.table ("table_LnL.txt");
par(fig=c(0, 0.7, 0, 1), new = T, cex=1); ## AIC versus tree length
par(tcl=-0.15, mgp=c(1,0.08,0), cex.main=1., mar=c(2,2,0.6,0.2));
ballsize <- 4*(a$V5 - min(a$V5))/(max(a$V5) - min(a$V5)) + 0.1
plot(a$V4, a$V6, pch=21, col="firebrick4", bg=col_red, cex=ballsize, xlab="common origin tree length", ylab="");
mtext(expression(Delta[AIC]), side=2, line=0.8, cex=1.4);
par(fig=c(0.7, 1, 0, 1), mar=c(2,0,0,0.1), new = T); ## inset
barplot (hist (a$V5, 12, plot = F)$counts, axes=F, space=0, horiz=T, border="gray30", col="gray70");
dev.off();
18.295241 + 8.504118 + 8.504118
hist(a$V4)
quit();
dev.off();
hist(a$V4)
a
a$V7 <- rowSums(a[,1:3]);
a
p1 <- hist(a$V7);
p2 <- hist(a$V4);
p1 <- hist(a$V7);
p3 <- density(a$V7);
p4 <- density(a$V4);
plot(p1, col=rgb(0,0,1,1/4));  # first histogram
plot(p2, col=rgb(1,0,0,1/4));  # CA histogram
plot(p3, col=rgb(0,0,1,1/4));  # first histogram
lines(p4, col=rgb(1,0,0,1/4));  # second
plot(p3, col=rgb(0,0,1,1/4), xlim=c(,100));  # IO
plot(p3, col=rgb(0,0,1,1/4), xlim=c(20,100));  # IO
lines(p4, col=rgb(1,0,0,1/4));  # CA
plot(p3, col=rgb(0,0,1,1/4), xlim=c(20,65));  # IO
lines(p4, col=rgb(1,0,0,1/4));  # CA
legend ("top", cex = 0.8, legend = c("IO", "CA"), bty = "n", text.col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)));
legend ("topright", cex = 0.8, legend = c("IO", "CA"), bty = "n", text.col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)));
dev.off();
plot(p3, col=rgb(0,0,1,1/4), xlim=c(20,65));  # IO
lines(p4, col=rgb(1,0,0,1/4));  # CA
legend ("topright", cex = 0.8, legend = c("IO", "CA"), bty = "n", text.col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)));
plot(p3, col=rgb(0,0,1,1/4), xlim=c(20,65));  # IO
lines(p4, col=rgb(1,0,0,1/4));  # CA
legend ("topleft", cex = 0.8, legend = c("IO", "CA"), bty = "n", text.col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)));
pdf(file = "MLtreelength_IO_CA.pdf ")
plot(p3, col=rgb(0,0,1,1/4), xlim=c(20,65));  # IO
lines(p4, col=rgb(1,0,0,1/4));  # CA
legend ("topleft", cex = 0.8, legend = c("IO", "CA"), bty = "n", text.col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)));
dev.off();
pdf(file ="MLtreelength_IO_CA.pdf")
plot(p3, col=rgb(0,0,1,1/4), xlim=c(20,65));  # IO
lines(p4, col=rgb(1,0,0,1/4));  # CA
legend ("topleft", cex = 0.8, legend = c("IO", "CA"), bty = "n", text.col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)));
dev.off();
setwd("/DATA/work/ONCOGENEVOL/E5/E5_Original_files/PermutationTests/AlphaPVs_E5_aa_new/test_randomly_shuffled_data");
library(reshape2); #to melt data
library(ggplot2); #for plotting
library(pgirmess); #for kruskalmc
library(car); #for LeveneTest
data <- read.table("table_treelen_lnl_100iter.txt", header=T);
tlen_H0 <- data$treelen_ALL;
setwd("/DATA/work/ONCOGENEVOL/E5/E5_Original_files/PermutationTests/AlphaPVs_E5_aa_new/test_randomly_shuffled_data");
library(reshape2); #to melt data
library(ggplot2); #for plotting
library(pgirmess); #for kruskalmc
library(car); #for LeveneTest
data <- read.table("table_treelen_lnl_100iter.txt", header=T);
data <- read.table("table_treelen_lnl_100iter.txt", header=T);
data <- read.table("table_treelen_lnl_100iter.txt", header=T);
tlen_H0 <- data$treelen_ALL;
data$treelen_delta
data$treelen_delta.1
setwd("/DATA/work/ONCOGENEVOL/E5/E5_Original_files/PermutationTests/AlphaPVs_E5_aa_new/test_randomly_shuffled_data");
library(reshape2); #to melt data
library(ggplot2); #for plotting
library(pgirmess); #for kruskalmc
library(car); #for LeveneTest
data <- read.table("table_treelen_lnl_100iter.txt", header=T);
tlen_H0 <- data$treelen_ALL;
tlen_H1 <- data$treelen_part_H4 + data$treelen_beta;
tlen_H2 <- data$treelen_part_H3 + data$treelen_beta + data$treelen_epsilon_dseta;
tlen_H3 <- data$treelen_part_H5 + data$treelen_part_H2 + data$treelen_beta;
tlen_H4 <- data$treelen_part_H5 + data$treelen_beta + data$treelen_gammadelta + data$treelen_delta;
tlen_H5 <- data$treelen_part_H1 + data$treelen_part_H2 + data$treelen_beta + data$treelen_epsilon_dseta;
tlen_H4 <- data$treelen_alpha1 + data$treelen_alpha2 + data$treelen_gammadelta + data$treelen_delta + data$treelen_beta + data$treelen_epsilon_dseta;
tlen_H0 <- data$treelen_ALL;
tlen_H1 <- data$treelen_part_H4 + data$treelen_beta;
tlen_H2 <- data$treelen_part_H3 + data$treelen_beta + data$treelen_epsilon_dseta;
tlen_H3 <- data$treelen_part_H5 + data$treelen_part_H2 + data$treelen_beta;
tlen_H4 <- data$treelen_part_H5 + data$treelen_beta + data$treelen_gammadelta + data$treelen_delta;
tlen_H5 <- data$treelen_part_H1 + data$treelen_part_H2 + data$treelen_beta + data$treelen_epsilon_dseta;
tlen_H6 <- data$treelen_alpha1 + data$treelen_alpha2 + data$treelen_gammadelta + data$treelen_delta + data$treelen_beta + data$treelen_epsilon_dseta;
treelen <- cbind(tlen_H0, tlen_H1, tlen_H2, tlen_H3, tlen_H4, tlen_H5, tlen_H6);
treelen_melt <- melt(treelen);
lnl_H0 <- data$lnl_ALL;
lnl_H1 <- data$lnl_part_H4 + data$lnl_beta;
lnl_H2 <- data$lnl_part_H3 + data$lnl_beta + data$lnl_epsilon_dseta;
lnl_H3 <- data$lnl_part_H5 + data$lnl_part_H2 + data$lnl_beta;
lnl_H4 <- data$lnl_part_H5 + data$lnl_beta + data$lnl_gammadelta + data$lnl_delta;
lnl_H5 <- data$lnl_part_H1 + data$lnl_part_H2 + data$lnl_beta + data$lnl_epsilon_dseta;
lnl_H6 <- data$lnl_alpha1 + data$lnl_alpha2 + data$lnl_gammadelta + data$lnl_delta + data$lnl_beta + data$lnl_epsilon_dseta;
loglik <- cbind(lnl_H0, lnl_H1, lnl_H2, lnl_H3, lnl_H4, lnl_H5, lnl_H6);
loglik_melt <- melt(loglik);
bf_H0 <- lnl_H0 - lnl_H0;
bf_H1 <- lnl_H0 - lnl_H1;
bf_H2 <- lnl_H0 - lnl_H2;
bf_H3 <- lnl_H0 - lnl_H3;
bf_H4 <- lnl_H0 - lnl_H4;
bf_H5 <- lnl_H0 - lnl_H5;
bf_H6 <- lnl_H0 - lnl_H6;
bayes <- cbind(bf_H0, bf_H1, bf_H2, bf_H3, bf_H4, bf_H5, bf_H6);
bayes_melt <- melt(bayes);
bayes2 <- cbind(bf_H1, bf_H2, bf_H3, bf_H4, bf_H5, bf_H6);
bayes_melt2 <- melt(bayes2);
ggplot(treelen_melt, aes(x=value, fill=Var2)) +
#  xlim(30,45) +
#  xlim(30,45) +
geom_histogram(bins=60) +
xlab("ML tree length under CA") +
ggtitle("AlphaPVs E5 aa reduced");
svg(file="hist_MLtreelen_100iter.svg");
ggplot(treelen_melt, aes(x=value, fill=Var2)) +
#  xlim(30,45) +
#  xlim(30,45) +
geom_histogram(bins=60) +
xlab("ML tree length under CA") +
ggtitle("AlphaPVs E5 aa reduced");
dev.off();
ggplot(treelen_melt, aes(x=value, fill=Var2)) +
#  xlim(30,45) +
xlim(28,45) +
geom_density(alpha=0.5) +
xlab("ML tree length under CA") +
ggtitle("AlphaPVs E5 aa reduced");
ggplot(treelen_melt, aes(x=value, fill=Var2)) +
#  xlim(30,45) +
#  xlim(28,45) +
geom_density(alpha=0.5) +
xlab("ML tree length under CA") +
ggtitle("AlphaPVs E5 aa reduced");
svg(file="density_MLtreelen_100iter.svg");
ggplot(treelen_melt, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("ML tree length under CA") +
ggtitle("AlphaPVs E5 aa reduced");
dev.off();
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa reduced");
svg(file="hist_LnL_100iter.svg");
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa reduced");
dev.off();
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa reduced");
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa reduced");
svg(file="density_LnL_100iter.svg");
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa reduced");
dev.off();
ggplot(bayes_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa reduced");
svg(file="hist_BF_100iter.svg");
ggplot(bayes_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa reduced");
dev.off();
ggplot(bayes_melt2, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa reduced");
svg(file="density_BF_100iter.svg");
ggplot(bayes_melt2, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa reduced");
dev.off();
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa reduced");
ggplot(bayes_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa reduced");
ggplot(bayes_melt2, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa reduced");
svg(file="density_BF_100iter.svg");
ggplot(bayes_melt2, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa reduced");
dev.off();
kruskal.test(treelen_melt$value ~ treelen_melt$Var2);
kruskalmc(treelen_melt$value ~ treelen_melt$Var2);
wilcox.test(tlen_H0, tlen_H1);
wilcox.test(tlen_H0, tlen_H2);
wilcox.test(tlen_H0, tlen_H3);
wilcox.test(tlen_H0, tlen_H4);
wilcox.test(tlen_H0, tlen_H5);
wilcox.test(tlen_H0, tlen_H6);
kruskal.test(loglik_melt$value ~ loglik_melt$Var2);
kruskalmc(loglik_melt$value ~ loglik_melt$Var2);
kruskal.test(loglik_melt$value ~ loglik_melt$Var2);
kruskalmc(loglik_melt$value ~ loglik_melt$Var2);
kruskal.test(bayes_melt2$value ~ bayes_melt2$Var2);
kruskalmc(bayes_melt2$value ~ bayes_melt2$Var2);
svg(file="hist_MLtreelen_100iter.svg");
ggplot(treelen_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=60) +
xlab("ML tree length under CA") +
ggtitle("AlphaPVs E5 aa");
dev.off();
svg(file="density_MLtreelen_100iter.svg");
ggplot(treelen_melt, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("ML tree length under CA") +
ggtitle("AlphaPVs E5 aa");
dev.off();
svg(file="hist_LnL_100iter.svg");
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa");
dev.off();
svg(file="density_LnL_100iter.svg");
ggplot(loglik_melt, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Log likelihood") +
ggtitle("AlphaPVs E5 aa");
dev.off();
svg(file="hist_BF_100iter.svg");
ggplot(bayes_melt, aes(x=value, fill=Var2)) +
geom_histogram(bins=30) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa");
dev.off();
svg(file="density_BF_100iter.svg");
ggplot(bayes_melt2, aes(x=value, fill=Var2)) +
geom_density(alpha=0.5) +
xlab("Bayes Factor") +
ggtitle("AlphaPVs E5 aa");
dev.off();
